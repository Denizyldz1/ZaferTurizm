// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZaferTurizm.DataAccess;

#nullable disable

namespace ZaferTurizm.DataAccess.Migrations
{
    [DbContext(typeof(TourDbContext))]
    partial class TourDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ZaferTurizm.Domain.BusTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("BusTrip", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 500m,
                            RouteId = 1,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 550m,
                            RouteId = 2,
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 650m,
                            RouteId = 3,
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 750m,
                            RouteId = 4,
                            VehicleId = 4
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("City", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adana"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adıyaman"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Afyonkarahisar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ağrı"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Amasya"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Aydın"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Bilecik"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Bingöl"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Bitlis"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Bolu"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Burdur"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Çankırı"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Çorum"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Denizli"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Elazığ"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Erzincan"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Erzurum"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Gaziantep"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Giresun"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Gümüşhane"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Hakkari"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Hatay"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Isparta"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Mersin"
                        },
                        new
                        {
                            Id = 34,
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = 35,
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Kars"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Kayseri"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Kırklareli"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Kırşehir"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Kocaeli"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Konya"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Malatya"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Manisa"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Kahramanmaraş"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Mardin"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Muş"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Niğde"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Ordu"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Rize"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Sakarya"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Samsun"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Siirt"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Tekirdağ"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Tunceli"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Uşak"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Van"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Yozgat"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Zonguldak"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Aksaray"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Bayburt"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Karaman"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Kırıkkale"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Batman"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Şırnak"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Bartın"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Ardahan"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Iğdır"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Yalova"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Karabük"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Kilis"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Osmaniye"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Düzce"
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Passenger", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Tsubasa",
                            Gender = (byte)2,
                            IdentityNumber = "12345667874",
                            LastName = "Ozora"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sanae",
                            Gender = (byte)1,
                            IdentityNumber = "8764873564",
                            LastName = "Ozora"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Taro",
                            Gender = (byte)2,
                            IdentityNumber = "3486384743",
                            LastName = "Misaki"
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArrivalCityId")
                        .HasColumnType("int");

                    b.Property<int>("DepartureCityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalCityId");

                    b.HasIndex("DepartureCityId");

                    b.ToTable("Route", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalCityId = 34,
                            DepartureCityId = 35
                        },
                        new
                        {
                            Id = 2,
                            ArrivalCityId = 6,
                            DepartureCityId = 34
                        },
                        new
                        {
                            Id = 3,
                            ArrivalCityId = 7,
                            DepartureCityId = 34
                        },
                        new
                        {
                            Id = 4,
                            ArrivalCityId = 35,
                            DepartureCityId = 6
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusTripId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusTripId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusTripId = 1,
                            PassengerId = 1,
                            Price = 500m,
                            SeatNumber = 10
                        },
                        new
                        {
                            Id = 2,
                            BusTripId = 2,
                            PassengerId = 2,
                            Price = 550m,
                            SeatNumber = 10
                        },
                        new
                        {
                            Id = 3,
                            BusTripId = 3,
                            PassengerId = 3,
                            Price = 650m,
                            SeatNumber = 10
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("VehicleDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleDefinitionId");

                    b.ToTable("Vehicle", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlateNumber = "34 ABC 123",
                            VehicleDefinitionId = 1
                        },
                        new
                        {
                            Id = 2,
                            PlateNumber = "34 CDE 654",
                            VehicleDefinitionId = 1
                        },
                        new
                        {
                            Id = 3,
                            PlateNumber = "34 QWE 345",
                            VehicleDefinitionId = 2
                        },
                        new
                        {
                            Id = 4,
                            PlateNumber = "34 ZXC 987",
                            VehicleDefinitionId = 3
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("HasToilet")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("VehicleDefinition", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasToilet = false,
                            HasWifi = true,
                            SeatCount = 48,
                            VehicleModelId = 1,
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            HasToilet = false,
                            HasWifi = true,
                            SeatCount = 48,
                            VehicleModelId = 1,
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            HasToilet = false,
                            HasWifi = false,
                            SeatCount = 52,
                            VehicleModelId = 5,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VehicleMake", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MAN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Neoplan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Otokar"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Volvo"
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("VehicleMakeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleMakeId");

                    b.ToTable("VehicleModel", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Travego",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "403",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tourismo",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lions",
                            VehicleMakeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fortuna",
                            VehicleMakeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "SL",
                            VehicleMakeId = 2
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.BusTrip", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZaferTurizm.Domain.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Route", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.City", "ArrivalCity")
                        .WithMany()
                        .HasForeignKey("ArrivalCityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZaferTurizm.Domain.City", "DepartureCity")
                        .WithMany()
                        .HasForeignKey("DepartureCityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ArrivalCity");

                    b.Navigation("DepartureCity");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Ticket", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.BusTrip", "BusTrip")
                        .WithMany()
                        .HasForeignKey("BusTripId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZaferTurizm.Domain.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusTrip");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Vehicle", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.VehicleDefinition", "VehicleDefinition")
                        .WithMany()
                        .HasForeignKey("VehicleDefinitionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleDefinition");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleDefinition", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.VehicleModel", "VehicleModel")
                        .WithMany()
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleModel");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleModel", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.VehicleMake", "VehicleMake")
                        .WithMany()
                        .HasForeignKey("VehicleMakeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleMake");
                });
#pragma warning restore 612, 618
        }
    }
}
